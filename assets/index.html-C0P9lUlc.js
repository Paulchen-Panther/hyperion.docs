import{_ as c,b as i,c as p,d,e,g as n,f as s,w as t,h as r}from"./app-4Z5CXxNJ.js";const u={},h=e("h1",{id:"json-rpc-introduction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#json-rpc-introduction"},[e("span",null,"JSON RPC Introduction")])],-1),m=e("p",null,"The JSON-RPC interfaces provides many ways to interact with Hyperion. You can retrieve information about your server, your instances and take actions (such as setting a priority input).",-1),b=e("h2",{id:"what-is-json",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#what-is-json"},[e("span",null,"What is JSON?")])],-1),g={href:"https://www.json.org/",target:"_blank",rel:"noopener noreferrer"},v=r(`<h3 id="sending-json" tabindex="-1"><a class="header-anchor" href="#sending-json"><span>Sending JSON</span></a></h3><p>Hyperion requires a specially formatted JSON message. A <code>command</code> argument is always required. A <code>tan</code> argument is optional. This is an integer you can freely choose -- it is part of the response you will receive to allow you to filter the response from other server messages (this functionality is likely necessary for advanced usecases only).</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;YourCommand&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;tan&quot;</span> <span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Depending on the command, there might be an additional subcommand required:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;YourCommand&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;subcommand&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;YourSubCommand&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;tan&quot;</span> <span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="response" tabindex="-1"><a class="header-anchor" href="#response"><span>Response</span></a></h3><p>Most messages you send will trigger a response of the following format:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;YourCommand&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;info&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span> ...DATA... <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;instance&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>  
  <span class="token property">&quot;success&quot;</span> <span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;tan&quot;</span> <span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>command</strong>: The command you requested.</li><li><strong>tan</strong>: The tan you provided (If not, it will default to 0 in the response).</li><li><strong>instance</strong>: Instance# sent the update</li><li><strong>success</strong>: true or false. If false, an <strong>error</strong> argument will contain details of the issue.</li><li><strong>info</strong>: The data you requested (if any).</li></ul><h2 id="connect" tabindex="-1"><a class="header-anchor" href="#connect"><span>Connect</span></a></h2><p>Hyperion currently supports multiple connection mechanisms: TCP Socket (&quot;Json Server&quot;), WebSocket and HTTP/S.</p>`,11),k={class:"custom-container tip"},f=e("p",{class:"custom-container-title"},"TIP",-1),_=e("h3",{id:"tcp-socket",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#tcp-socket"},[e("span",null,"TCP Socket")])],-1),y=e("p",null,'This is a "raw" connection, you can send and receive line-separated json from the server (default port: 19444). This is also known as the "Json Server".',-1),S=e("h3",{id:"websocket",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#websocket"},[e("span",null,"WebSocket")])],-1),j={href:"https://en.wikipedia.org/wiki/WebSocket%7C",target:"_blank",rel:"noopener noreferrer"},T=e("h3",{id:"http-s-json",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#http-s-json"},[e("span",null,"HTTP/S Json")])],-1),w=e("p",null,[n("HTTP requests can also be sent to the webserver (default port: 8090, for HTTPS: 8092). Send a HTTP/S POST request along with a properly formatted json message in the body to the (example) url: "),e("code",null,"http://IpOfDevice:WebserverPort/json-rpc")],-1),q={class:"custom-container tip"},x=e("p",{class:"custom-container-title"},"TIP",-1),P=r('<div class="custom-container warning"><p class="custom-container-title">HTTP/S Restrictions</p><p>Please note that the HTTP JSON-RPC lacks of the following functions due to technical limitations.</p><ul><li>Image streams, led color streams, logging streams, subscriptions</li></ul></div><h2 id="api" tabindex="-1"><a class="header-anchor" href="#api"><span>API</span></a></h2><h3 id="server-info" tabindex="-1"><a class="header-anchor" href="#server-info"><span>Server Info</span></a></h3>',3),C=e("h3",{id:"control",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#control"},[e("span",null,"Control")])],-1),I=e("h3",{id:"authentication",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#authentication"},[e("span",null,"Authentication")])],-1),H=e("h3",{id:"subscribe",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscribe"},[e("span",null,"Subscribe")])],-1),N=e("h2",{id:"_3rd-party-libraries",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_3rd-party-libraries"},[e("span",null,"3rd Party Libraries")])],-1),A={href:"https://github.com/dermotduffy/hyperion-py",target:"_blank",rel:"noopener noreferrer"};function J(O,R){const o=i("ExternalLinkIcon"),a=i("RouteLink"),l=i("ImageWrap");return p(),d("div",null,[h,m,b,e("p",null,[n("JSON is a standardized message format (see "),e("a",g,[n("JSON.org"),s(o)]),n(") and is supported by most programming languages. It is human readable which makes for easier debugging.")]),v,e("div",k,[f,e("p",null,[n("You can automatically discover Hyperion servers! See "),s(a,{to:"/api/Detect.html"},{default:t(()=>[n("Detect Hyperion")]),_:1})])]),_,y,S,e("p",null,[n("This is part of the Hyperion webserver (default port: 8090). You send and receive json commands. WSS is also supported on port 8092. Only TEXT mode is supported. Read more about websockets at "),e("a",j,[n("Websocket"),s(o)]),n(".")]),T,w,s(l,{src:"/images/en/http_jsonrpc.jpg",alt:"Control Hyperion with HTTP JSON RPC"},{default:t(()=>[n(" Example picture with a [Firefox](https://addons.mozilla.org/de/firefox/addon/restclient/)/[Chrome](https://chrome.google.com/webstore/detail/yet-another-rest-client/ehafadccdcdedbhcbddihehiodgcddpl) Addon to send HTTP JSON messages ")]),_:1}),e("div",q,[x,e("p",null,[n('If you get a "No Authorization" response, you need to create an '),s(a,{to:"/json/Authentication.html#token-system"},{default:t(()=>[n("Authorization Token")]),_:1})])]),P,e("p",null,[n("A large variety of data is available from the server: "),s(a,{to:"/json/ServerInfo.html"},{default:t(()=>[n("Server Info")]),_:1})]),C,e("p",null,[n("Control your Hyperion server: "),s(a,{to:"/json/Control.html"},{default:t(()=>[n("Control")]),_:1})]),I,e("p",null,[n("Authentication mechanisms: "),s(a,{to:"/json/Authentication.html"},{default:t(()=>[n("Authentication")]),_:1})]),H,e("p",null,[n("Data subscriptions: "),s(a,{to:"/json/Subscribe.html"},{default:t(()=>[n("Subscribe")]),_:1})]),N,e("ul",null,[e("li",null,[e("a",A,[n("Hyperion-py"),s(o)]),n(" is a 3rd-party Python library for communication with Hyperion-NG. It uses the API described here as the underlying communication mechanism and presents it in a user-friendly way. As a 3rd party library, it is not supported by the Hyperion development team.")])])])}const D=c(u,[["render",J],["__file","index.html.vue"]]),E=JSON.parse('{"path":"/json/","title":"JSON RPC Introduction","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"What is JSON?","slug":"what-is-json","link":"#what-is-json","children":[{"level":3,"title":"Sending JSON","slug":"sending-json","link":"#sending-json","children":[]},{"level":3,"title":"Response","slug":"response","link":"#response","children":[]}]},{"level":2,"title":"Connect","slug":"connect","link":"#connect","children":[{"level":3,"title":"TCP Socket","slug":"tcp-socket","link":"#tcp-socket","children":[]},{"level":3,"title":"WebSocket","slug":"websocket","link":"#websocket","children":[]},{"level":3,"title":"HTTP/S Json","slug":"http-s-json","link":"#http-s-json","children":[]}]},{"level":2,"title":"API","slug":"api","link":"#api","children":[{"level":3,"title":"Server Info","slug":"server-info","link":"#server-info","children":[]},{"level":3,"title":"Control","slug":"control","link":"#control","children":[]},{"level":3,"title":"Authentication","slug":"authentication","link":"#authentication","children":[]},{"level":3,"title":"Subscribe","slug":"subscribe","link":"#subscribe","children":[]}]},{"level":2,"title":"3rd Party Libraries","slug":"_3rd-party-libraries","link":"#_3rd-party-libraries","children":[]}],"git":{"updatedTime":1710449524000},"filePathRelative":"json/README.md"}');export{D as comp,E as data};
