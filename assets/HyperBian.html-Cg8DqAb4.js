import{_ as l,b as t,c as o,d as r,e as n,g as e,f as s,w as p,h as d}from"./app-SNb-n1nX.js";const c={},u=n("h1",{id:"hyperbian",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#hyperbian"},[n("span",null,"HyperBian")])],-1),m=n("p",null,'Ist ein einsatzbereites (Ready-to-use) Image für Deinen Raspberry Pi. Es basiert auf dem originalen Raspberry Pi Foundation Image "Raspberry Pi OS Lite". Hyperion ist bereits vorinstalliert. Einfacher geht es nicht.',-1),h={href:"https://github.com/Hyperion-Project/HyperBian/releases",target:"_blank",rel:"noopener noreferrer"},k=n("li",null,"Image auf SD brennen",-1),g=n("li",null,"Raspberry Pi einschalten",-1),b=n("li",null,[e("Zum Konfigurieren mit Deinem Browser die Adresse "),n("code",null,"http://IpAdresseDeinesRPi:8090"),e(" aufrufen")],-1),v=n("h2",{id:"anforderungen",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#anforderungen"},[n("span",null,"Anforderungen")])],-1),y=n("ul",null,[n("li",null,"SD-Karte mit mindestens 4 GB Größe"),n("li",null,"Raspberry Pi"),n("li",null,"Linux/Mac/Windows + SD Kartenleser/-schreiber")],-1),_=n("h2",{id:"installation",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#installation"},[n("span",null,"Installation")])],-1),f={href:"https://github.com/Hyperion-Project/HyperBian/releases",target:"_blank",rel:"noopener noreferrer"},w={href:"https://www.raspberrypi.com/documentation/computers/getting-started.html#raspberry-pi-imager",target:"_blank",rel:"noopener noreferrer"},z=n("li",null,"Starte den Pi Imager",-1),B=n("li",null,'Wähle als Betriebssystem "Custom OS" und wähle das heruntergeladene HyperBian-XXXX-Paket aus',-1),S=n("li",null,"Wähle das Ziel, d.h. die SD-Karte",-1),D=n("li",null,'Klicken auf "Next" und wähle "No" für keine zusätzlichen Anpassungen',-1),I=n("li",null,"Das HyperBian-Image sollte nun auf die SD-Karte geschrieben werden",-1),P=n("li",null,"Stecke die SD-Karte in den Raspberry Pi und starte das System",-1),q=n("h3",{id:"wifi-zeitzone-ssh-zugang",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#wifi-zeitzone-ssh-zugang"},[n("span",null,"WiFi, Zeitzone & ssh-Zugang")])],-1),H=n("p",null,'Falls der Raspberry Pi mit WLAN genutzt werden soll oder die Zeitzone bzw. andere OS-bezogene Konfigurationen aktualisiert werden sollen, kann das Pi Imager OS-Customization Menü verwendet werden. Im Installationsschritt 6. wähle "Edit Settings" und gib dann z.B. die WLAN SSID, das Passwort und das Land an. Sichere die die Einstellungen mit "Save" und fahre mit "Yes" fort, um den Imager-Prozess zu starten.',-1),R={class:"custom-container tip"},x=n("p",{class:"custom-container-title"},"Verwenden den Standardbenutzer (und das Passwort) von HyperBian, falls diese angegeben werden müssen.",-1),E=n("ul",null,[n("li",null,[e("Benutzer: "),n("code",null,"hyperion")]),n("li",null,[e("Kennwort: "),n("code",null,"ambientlight")])],-1),K=d(`<p>Die Konfiguration wird während des ersten Starts durchgeführt.</p><details class="custom-container details"><summary>Alternative Methode</summary><p>Falls der PI Imager nicht verwende wird oder die Details nicht das OS-Customization Menü angegeben werden sollen, kann man die Einrichtung auch per Datei vornehmen.</p><p>Erstelle eine Datei namens <code>custom.toml</code>. Passe die Datei mit den gewünschten Einstellungen an. Kommentiere alle die Elemente aus, die nicht geändert werden sollen.</p><p>Speicher die Datei in der Boot Partion der SD-Karte.</p><p><strong>Beispiel - custom.toml</strong></p><div class="language-toml line-numbers-mode" data-ext="toml" data-title="toml"><pre class="language-toml"><code><span class="token comment"># Required:</span>
<span class="token key property">config_version</span> <span class="token punctuation">=</span> <span class="token number">1</span>

<span class="token punctuation">[</span><span class="token table class-name">system</span><span class="token punctuation">]</span>
<span class="token key property">hostname</span> <span class="token punctuation">=</span> <span class="token string">&quot;HyperBian&quot;</span>

<span class="token punctuation">[</span><span class="token table class-name">user</span><span class="token punctuation">]</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;hyperion&quot;</span>
<span class="token comment"># The password can be encrypted or plain. To encrypt, we can use &quot;openssl passwd -5 raspberry&quot;</span>
<span class="token key property">password</span> <span class="token punctuation">=</span> <span class="token string">&quot;ambientlight&quot;</span>
<span class="token key property">password_encrypted</span> <span class="token punctuation">=</span> <span class="token boolean">false</span>

<span class="token punctuation">[</span><span class="token table class-name">ssh</span><span class="token punctuation">]</span>
<span class="token comment"># ssh_import_id = &quot;gh:user&quot; # import public keys from github</span>
<span class="token key property">enabled</span> <span class="token punctuation">=</span> <span class="token boolean">false</span>
<span class="token key property">password_authentication</span> <span class="token punctuation">=</span> <span class="token boolean">true</span>
<span class="token comment"># We can also seed the ssh public keys configured for the default user:</span>
<span class="token comment"># authorized_keys = [ &quot;ssh-rsa ... user@host&quot;, ... ]</span>

<span class="token punctuation">[</span><span class="token table class-name">wlan</span><span class="token punctuation">]</span>
<span class="token key property">ssid</span> <span class="token punctuation">=</span> <span class="token string">&quot;myWifi&quot;</span>
<span class="token key property">password</span> <span class="token punctuation">=</span> <span class="token string">&quot;myWifiPassword&quot;</span>
<span class="token key property">password_encrypted</span> <span class="token punctuation">=</span> <span class="token boolean">false</span>
<span class="token key property">hidden</span> <span class="token punctuation">=</span> <span class="token boolean">false</span>
<span class="token comment"># The country is written to /etc/default/crda</span>
<span class="token comment"># Reference: https://wireless.wiki.kernel.org/en/developers/Regulatory</span>
<span class="token key property">country</span> <span class="token punctuation">=</span> <span class="token string">&quot;DE&quot;</span>

<span class="token punctuation">[</span><span class="token table class-name">locale</span><span class="token punctuation">]</span>
<span class="token key property">keymap</span> <span class="token punctuation">=</span> <span class="token string">&quot;de&quot;</span>
<span class="token key property">timezone</span> <span class="token punctuation">=</span> <span class="token string">&quot;Europe/Berlin&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h4 id="standard-ssh-login" tabindex="-1"><a class="header-anchor" href="#standard-ssh-login"><span>Standard SSH LOGIN</span></a></h4><ul><li>Benutzername: <code>hyperion</code></li><li>Passwort: <code>ambientlight</code></li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>HyperBian wird mit einer englischen Tastatur-Konfiguration ausgeliefert. Dort sind die Zeichen &#39;y&#39; und &#39;z&#39; vertauscht. Für den Benutzernamen musst Du also zuerstmal <code>hzperion</code> tippen; danach kannst Du das Tataturlayout per <code>sudo raspi-config</code> ändern.</p></div>`,5);function L(N,W){const a=t("ExternalLinkIcon"),i=t("RouteLink");return o(),r("div",null,[u,m,n("ol",null,[n("li",null,[n("a",h,[e("Herunterladen"),s(a)])]),k,g,b]),v,y,_,n("ol",null,[n("li",null,[e("Lade das fertige "),n("a",f,[e("HyperBian Image"),s(a)]),e(" herunter")]),n("li",null,[e("Installiere den "),n("a",w,[e("Raspberry Pi Imager"),s(a)]),e(", um das Image auf eine SD-Karte zu brennen.")]),z,B,S,D,I,P]),q,H,n("div",R,[x,E,n("p",null,[e("Es kann auch ein anderer Benutzernamen gewählt werden, allerdings muss dann der vorkonfigurierte Dienst von Hyperion später aktualisieren werden- Aktualisierung des Dienstes auf den "),s(i,{to:"/de/user/Installation.html#andern-des-benutzer-des-dienstes-auf-den-aktuellen-benutzer"},{default:p(()=>[e("aktuellen Benutzer")]),_:1})])]),K])}const T=l(c,[["render",L],["__file","HyperBian.html.vue"]]),Z=JSON.parse('{"path":"/de/user/HyperBian.html","title":"HyperBian","lang":"de-DE","frontmatter":{},"headers":[{"level":2,"title":"Anforderungen","slug":"anforderungen","link":"#anforderungen","children":[]},{"level":2,"title":"Installation","slug":"installation","link":"#installation","children":[{"level":3,"title":"WiFi, Zeitzone & ssh-Zugang","slug":"wifi-zeitzone-ssh-zugang","link":"#wifi-zeitzone-ssh-zugang","children":[]}]}],"git":{"updatedTime":1710444694000},"filePathRelative":"de/user/HyperBian.md"}');export{T as comp,Z as data};
