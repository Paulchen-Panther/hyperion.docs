import{_ as i,b as o,c as p,d as r,e as n,g as t,f as e,w as c,h as a}from"./app-DDa5geYI.js";const d={},u=a('<h1 id="control" tabindex="-1"><a class="header-anchor" href="#control"><span>Control</span></a></h1><p>You can control Hyperion by sending specific JSON messages.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>The <code>tan</code> property is supported in these calls, but omitted for brevity.</p></div><h2 id="sections" tabindex="-1"><a class="header-anchor" href="#sections"><span>Sections</span></a></h2><h3 id="set-color" tabindex="-1"><a class="header-anchor" href="#set-color"><span>Set Color</span></a></h3><p>Set a color for all LEDs or provide a pattern of LED colors.</p>',6),m=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Property"),n("th",{style:{"text-align":"center"}},"Type"),n("th",{style:{"text-align":"center"}},"Required"),n("th",{style:{"text-align":"left"}},"Comment")])],-1),v=n("tr",null,[n("td",{style:{"text-align":"left"}},"color"),n("td",{style:{"text-align":"center"}},"Array"),n("td",{style:{"text-align":"center"}},"true"),n("td",{style:{"text-align":"left"}},[t("An array of R G B Integer values e.g. "),n("code",null,"[R,G,B]")])],-1),g=n("tr",null,[n("td",{style:{"text-align":"left"}},"duration"),n("td",{style:{"text-align":"center"}},"Integer"),n("td",{style:{"text-align":"center"}},"false"),n("td",{style:{"text-align":"left"}},[t("Duration of color in ms. If you don't provide a duration, it's "),n("code",null,"0"),t(" -> indefinite")])],-1),k=n("td",{style:{"text-align":"left"}},"priority",-1),y=n("td",{style:{"text-align":"center"}},"Integer",-1),b=n("td",{style:{"text-align":"center"}},"true",-1),h={style:{"text-align":"left"}},f=n("code",null,"50",-1),q={href:"/api/guidelines#priority_guidelines",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"2",-1),_=n("code",null,"99",-1),j=n("tr",null,[n("td",{style:{"text-align":"left"}},"origin"),n("td",{style:{"text-align":"center"}},"String"),n("td",{style:{"text-align":"center"}},"true"),n("td",{style:{"text-align":"left"}},[t("A short name of your application like "),n("code",null,"Hyperion of App"),t(" . Max length is "),n("code",null,"20"),t(", min "),n("code",null,"4"),t(".")])],-1),S=a(`<div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token comment">// Example: Set a blue color with indefinite duration at priority 50 </span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;color&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;color&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;priority&quot;</span><span class="token operator">:</span><span class="token number">50</span><span class="token punctuation">,</span>
  <span class="token property">&quot;origin&quot;</span><span class="token operator">:</span><span class="token string">&quot;My Fancy App&quot;</span>
<span class="token punctuation">}</span>
<span class="token comment">// Example: Set a cyan color for 12 seconds at priority 20</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;color&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;color&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;duration&quot;</span><span class="token operator">:</span><span class="token number">12000</span><span class="token punctuation">,</span>
  <span class="token property">&quot;priority&quot;</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span>
  <span class="token property">&quot;origin&quot;</span><span class="token operator">:</span><span class="token string">&quot;My Fancy App&quot;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Example: Provide a color pattern, which will be repeated until all LEDs have a color</span>
<span class="token comment">// One LED has 3 values (Red,Green,Blue) with range of 0-255</span>
<span class="token comment">// In this case LED 1: Red, LED 2: Red, LED 3: Blue.</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;color&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;color&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;duration&quot;</span><span class="token operator">:</span><span class="token number">12000</span><span class="token punctuation">,</span>
  <span class="token property">&quot;priority&quot;</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span>
  <span class="token property">&quot;origin&quot;</span><span class="token operator">:</span><span class="token string">&quot;My Fancy App&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="set-effect" tabindex="-1"><a class="header-anchor" href="#set-effect"><span>Set Effect</span></a></h3>`,2),w=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Property"),n("th",{style:{"text-align":"center"}},"Type"),n("th",{style:{"text-align":"center"}},"Required"),n("th",{style:{"text-align":"left"}},"Comment")])],-1),E=n("tr",null,[n("td",{style:{"text-align":"left"}},"effect"),n("td",{style:{"text-align":"center"}},"Object"),n("td",{style:{"text-align":"center"}},"true"),n("td",{style:{"text-align":"left"}},[t("Object with additional properties. e.g. "),n("code",null,'"name":"EffectName"'),t(".")])],-1),I=n("tr",null,[n("td",{style:{"text-align":"left"}},"duration"),n("td",{style:{"text-align":"center"}},"Integer"),n("td",{style:{"text-align":"center"}},"false"),n("td",{style:{"text-align":"left"}},[t("Duration of effect in ms. If you don't provide a duration, it's "),n("code",null,"0"),t(" -> indefinite")])],-1),A=n("td",{style:{"text-align":"left"}},"priority",-1),C=n("td",{style:{"text-align":"center"}},"Integer",-1),R=n("td",{style:{"text-align":"center"}},"true",-1),D={style:{"text-align":"left"}},B=n("code",null,"50",-1),L={href:"/api/guidelines#priority_guidelines",target:"_blank",rel:"noopener noreferrer"},T=n("code",null,"2",-1),N=n("code",null,"99",-1),G=n("tr",null,[n("td",{style:{"text-align":"left"}},"origin"),n("td",{style:{"text-align":"center"}},"String"),n("td",{style:{"text-align":"center"}},"true"),n("td",{style:{"text-align":"left"}},[t("A short name of your application like "),n("code",null,"Hyperion of App"),t(" . Max length is "),n("code",null,"20"),t(", min "),n("code",null,"4"),t(".")])],-1),M=a(`<div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token comment">// Example: Set the &#39;Warm mood blobs&#39; effect with indefinite duration</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;effect&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;effect&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;Warm mood blobs&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;priority&quot;</span><span class="token operator">:</span><span class="token number">50</span><span class="token punctuation">,</span>
  <span class="token property">&quot;origin&quot;</span><span class="token operator">:</span><span class="token string">&quot;My Fancy App&quot;</span>
<span class="token punctuation">}</span>
<span class="token comment">// Example: Set &#39;Rainbow swirl&#39; effect for 5 seconds</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;effect&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;effect&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;Rainbow swirl&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;duration&quot;</span><span class="token operator">:</span><span class="token number">5000</span><span class="token punctuation">,</span>
  <span class="token property">&quot;priority&quot;</span><span class="token operator">:</span><span class="token number">50</span><span class="token punctuation">,</span>
  <span class="token property">&quot;origin&quot;</span><span class="token operator">:</span><span class="token string">&quot;My Fancy App&quot;</span>
<span class="token punctuation">}</span>
<span class="token comment">// Example: Set &#39;Rainbow swirl&#39; effect for 1 second with overridden agrument</span>
<span class="token comment">// Each effect has different agruments inside the args property that can be overridden.</span>
<span class="token comment">// WARNING: We highly recommend using the effects configurator in the UI instead. Sending invalid values may cause the effect to misbehave or crash.</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;effect&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;effect&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;Rainbow swirl&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;args&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
      <span class="token property">&quot;rotation-time&quot;</span><span class="token operator">:</span><span class="token number">1</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;duration&quot;</span><span class="token operator">:</span><span class="token number">5000</span><span class="token punctuation">,</span>
  <span class="token property">&quot;priority&quot;</span><span class="token operator">:</span><span class="token number">50</span><span class="token punctuation">,</span>
  <span class="token property">&quot;origin&quot;</span><span class="token operator">:</span><span class="token string">&quot;My Fancy App&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="set-image" tabindex="-1"><a class="header-anchor" href="#set-image"><span>Set Image</span></a></h3>`,2),O={href:"https://doc.qt.io/qt-5/qimagereader.html#supportedImageFormats",target:"_blank",rel:"noopener noreferrer"},P=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Property"),n("th",{style:{"text-align":"center"}},"Type"),n("th",{style:{"text-align":"center"}},"Required"),n("th",{style:{"text-align":"left"}},"Comment")])],-1),H=n("td",{style:{"text-align":"left"}},"imagedata",-1),Y=n("td",{style:{"text-align":"center"}},"String",-1),F=n("td",{style:{"text-align":"center"}},"true",-1),V={style:{"text-align":"left"}},W={href:"https://en.wikipedia.org/wiki/Base64",target:"_blank",rel:"noopener noreferrer"},J=n("tr",null,[n("td",{style:{"text-align":"left"}},"format"),n("td",{style:{"text-align":"center"}},"String"),n("td",{style:{"text-align":"center"}},"true"),n("td",{style:{"text-align":"left"}},[t("Set to "),n("code",null,"auto"),t(" to let Hyperion parse the image according to type")])],-1),U=n("tr",null,[n("td",{style:{"text-align":"left"}},"name"),n("td",{style:{"text-align":"center"}},"String"),n("td",{style:{"text-align":"center"}},"true"),n("td",{style:{"text-align":"left"}},"The name of the image")],-1),K=n("tr",null,[n("td",{style:{"text-align":"left"}},"duration"),n("td",{style:{"text-align":"center"}},"Integer"),n("td",{style:{"text-align":"center"}},"false"),n("td",{style:{"text-align":"left"}},[t("Duration of image in ms. If you don't provide a duration, it's "),n("code",null,"0"),t(" -> endless")])],-1),Q=n("td",{style:{"text-align":"left"}},"priority",-1),Z=n("td",{style:{"text-align":"center"}},"Integer",-1),z=n("td",{style:{"text-align":"center"}},"true",-1),X={style:{"text-align":"left"}},$=n("code",null,"50",-1),nn={href:"/api/guidelines#priority_guidelines",target:"_blank",rel:"noopener noreferrer"},tn=n("code",null,"2",-1),en=n("code",null,"99",-1),sn=n("tr",null,[n("td",{style:{"text-align":"left"}},"origin"),n("td",{style:{"text-align":"center"}},"String"),n("td",{style:{"text-align":"center"}},"true"),n("td",{style:{"text-align":"left"}},[t("A short name of your application like "),n("code",null,"Hyperion of App"),t(" . Max length is "),n("code",null,"20"),t(", min "),n("code",null,"4"),t(".")])],-1),an=a(`<div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token comment">// Set an image for 5 seconds</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;image&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;imagedata&quot;</span><span class="token operator">:</span><span class="token string">&quot;VGhpcyBpcyBubyBpbWFnZSEgOik=&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;Name of Image&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;format&quot;</span><span class="token operator">:</span><span class="token string">&quot;auto&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;priority&quot;</span><span class="token operator">:</span><span class="token number">50</span><span class="token punctuation">,</span>
  <span class="token property">&quot;duration&quot;</span><span class="token operator">:</span><span class="token number">5000</span><span class="token punctuation">,</span>
  <span class="token property">&quot;origin&quot;</span><span class="token operator">:</span> <span class="token string">&quot;My Fancy App&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clear" tabindex="-1"><a class="header-anchor" href="#clear"><span>Clear</span></a></h3><p>Clear a priority, usually used to revert <a href="#set-color">set color</a>, <a href="#set-effect">set effect</a> or <a href="#set-image">set image</a>.</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token comment">// Clear effect/color/image with priority 50</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;clear&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;priority&quot;</span><span class="token operator">:</span><span class="token number">50</span>
<span class="token punctuation">}</span>
<span class="token comment">// Clear all effects/colors/images</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;clear&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;priority&quot;</span><span class="token operator">:</span><span class="token number">-1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>When you clear all, you clear all effects and colors regardless of who set them! Instead, we recommend users provide a list of possible clear targets based on a priority list</p></div><h3 id="adjustments" tabindex="-1"><a class="header-anchor" href="#adjustments"><span>Adjustments</span></a></h3>`,6),on={href:"/json/serverinfo#adjustments",target:"_blank",rel:"noopener noreferrer"},ln=a(`<table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:center;">Type</th><th style="text-align:center;">Required</th><th style="text-align:left;">Comment</th></tr></thead><tbody><tr><td style="text-align:left;">red</td><td style="text-align:center;">Array</td><td style="text-align:center;">false</td><td style="text-align:left;">An array of R G B Integer values e.g. <code>[R,G,B]</code></td></tr><tr><td style="text-align:left;">green</td><td style="text-align:center;">Array</td><td style="text-align:center;">false</td><td style="text-align:left;">An array of R G B Integer values e.g. <code>[R,G,B]</code></td></tr><tr><td style="text-align:left;">blue</td><td style="text-align:center;">Array</td><td style="text-align:center;">false</td><td style="text-align:left;">An array of R G B Integer values e.g. <code>[R,G,B]</code></td></tr><tr><td style="text-align:left;">cyan</td><td style="text-align:center;">Array</td><td style="text-align:center;">false</td><td style="text-align:left;">An array of R G B Integer values e.g. <code>[R,G,B]</code></td></tr><tr><td style="text-align:left;">magenta</td><td style="text-align:center;">Array</td><td style="text-align:center;">false</td><td style="text-align:left;">An array of R G B Integer values e.g. <code>[R,G,B]</code></td></tr><tr><td style="text-align:left;">yellow</td><td style="text-align:center;">Array</td><td style="text-align:center;">false</td><td style="text-align:left;">An array of R G B Integer values e.g. <code>[R,G,B]</code></td></tr><tr><td style="text-align:left;">white</td><td style="text-align:center;">Array</td><td style="text-align:center;">false</td><td style="text-align:left;">An array of R G B Integer values e.g. <code>[R,G,B]</code></td></tr><tr><td style="text-align:left;">gammaRed</td><td style="text-align:center;">Number (float)</td><td style="text-align:center;">false</td><td style="text-align:left;">minimum:<code>0.1</code> maximum <code>5.0</code> step of <code>0.1</code></td></tr><tr><td style="text-align:left;">gammaGreen</td><td style="text-align:center;">Number (float)</td><td style="text-align:center;">false</td><td style="text-align:left;">minimum:<code>0.1</code> maximum <code>5.0</code> step of <code>0.1</code></td></tr><tr><td style="text-align:left;">gammaBlue</td><td style="text-align:center;">Number (float)</td><td style="text-align:center;">false</td><td style="text-align:left;">minimum:<code>0.1</code> maximum <code>5.0</code> step of <code>0.1</code></td></tr><tr><td style="text-align:left;">brightness</td><td style="text-align:center;">Integer</td><td style="text-align:center;">false</td><td style="text-align:left;">minimum: <code>0</code> maximum <code>100</code> step of <code>1</code></td></tr><tr><td style="text-align:left;">brightnessCompensation</td><td style="text-align:center;">Integer</td><td style="text-align:center;">false</td><td style="text-align:left;">minimum: <code>0</code> maximum <code>100</code> step of <code>1</code></td></tr><tr><td style="text-align:left;">backlightThreshold</td><td style="text-align:center;">Integer</td><td style="text-align:center;">false</td><td style="text-align:left;">minimum: <code>0</code> maximum <code>100</code>. Step of <code>1</code>. (Minimum brightness!) Disabled for effect/color/image</td></tr><tr><td style="text-align:left;">backlightColored</td><td style="text-align:center;">Boolean</td><td style="text-align:center;">false</td><td style="text-align:left;">If <code>true</code> the backlight is colored, <code>false</code> it&#39;s white. Disabled for effect/color/image</td></tr><tr><td style="text-align:left;">id</td><td style="text-align:center;">String</td><td style="text-align:center;">false</td><td style="text-align:left;">Short identifier</td></tr></tbody></table><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token comment">// Example: Set gammaRed to 1.5</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;adjustment&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;adjustment&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token property">&quot;gammaRed&quot;</span><span class="token operator">:</span><span class="token number">1.5</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// Example: Set green to [0,236,0]</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;adjustment&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;adjustment&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token property">&quot;green&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">236</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// Example: Set backlightColored to true</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;adjustment&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;adjustment&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token property">&quot;backlightColored&quot;</span><span class="token operator">:</span><span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// Example: Send the 3 examples above at once</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;adjustment&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;adjustment&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token property">&quot;backlightColored&quot;</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;gammaRed&quot;</span><span class="token operator">:</span><span class="token number">1.5</span><span class="token punctuation">,</span>
    <span class="token property">&quot;green&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">236</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="led-mapping" tabindex="-1"><a class="header-anchor" href="#led-mapping"><span>LED mapping</span></a></h3><p>Switch the LED mapping mode for the incoming image.</p><table><thead><tr><th style="text-align:left;">mappingType value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">multicolor_mean</td><td style="text-align:left;">Mean Color Simple - per LED</td></tr><tr><td style="text-align:left;">unicolor_mean</td><td style="text-align:left;">Mean Color Image - applied on all LEDs</td></tr><tr><td style="text-align:left;">multicolor_mean_squared</td><td style="text-align:left;">Mean Color Squared - per LED</td></tr><tr><td style="text-align:left;">dominant_color</td><td style="text-align:left;">Dominant Color- per LED</td></tr><tr><td style="text-align:left;">dominant_color_advanced</td><td style="text-align:left;">Dominant Color Advanced - per LED</td></tr></tbody></table><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token comment">// Example: Set mapping mode to multicolor_mean</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;processing&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;mappingType&quot;</span><span class="token operator">:</span><span class="token string">&quot;multicolor_mean&quot;</span>
<span class="token punctuation">}</span>
<span class="token comment">// Example: Set mapping mode to unicolor_mean</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;processing&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;mappingType&quot;</span><span class="token operator">:</span><span class="token string">&quot;unicolor_mean&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="video-mode" tabindex="-1"><a class="header-anchor" href="#video-mode"><span>Video Mode</span></a></h3><p>Switch the video mode. Possible values are: <code>2D</code>, <code>3DSBS</code> and <code>3DTAB</code>.</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token comment">// Example: Set video mode to 3DTAB</span>
<span class="token punctuation">{</span>
 <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;videomode&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;videoMode&quot;</span><span class="token operator">:</span><span class="token string">&quot;3DTAB&quot;</span>
<span class="token punctuation">}</span>
<span class="token comment">// Example: Set video mode to 3DSBS</span>
<span class="token punctuation">{</span>
 <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;videomode&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;videoMode&quot;</span><span class="token operator">:</span><span class="token string">&quot;3DSBS&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="control-components" tabindex="-1"><a class="header-anchor" href="#control-components"><span>Control Components</span></a></h3>`,10),pn={href:"/json/serverinfo#components",target:"_blank",rel:"noopener noreferrer"},rn=n("a",{href:"#components-ids-explained"},"Components/IDs explained",-1),cn=a(`<div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token comment">// Example: disable LEDDEVICE component</span>
<span class="token punctuation">{</span>
 <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;componentstate&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;componentstate&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
   <span class="token property">&quot;component&quot;</span><span class="token operator">:</span><span class="token string">&quot;LEDDEVICE&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;state&quot;</span><span class="token operator">:</span><span class="token boolean">false</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// Example: enable SMOOTHING component</span>
<span class="token punctuation">{</span>
 <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;componentstate&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;componentstate&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
   <span class="token property">&quot;component&quot;</span><span class="token operator">:</span><span class="token string">&quot;SMOOTHING&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;state&quot;</span><span class="token operator">:</span><span class="token boolean">true</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Hyperion itself needs to be enabled! Check the status of &quot;ALL&quot; in the components list before you change another component!</p></div><h3 id="components-ids-explained" tabindex="-1"><a class="header-anchor" href="#components-ids-explained"><span>Components/IDs explained</span></a></h3>`,3),dn={href:"/json/ServerInfo.html#priorities",target:"_blank",rel:"noopener noreferrer"},un=a('<table><thead><tr><th style="text-align:left;">ComponentID</th><th style="text-align:center;">Component</th><th style="text-align:center;">Enable/Disable</th><th style="text-align:left;">Comment</th></tr></thead><tbody><tr><td style="text-align:left;">SMOOTHING</td><td style="text-align:center;">Smoothing</td><td style="text-align:center;">Yes</td><td style="text-align:left;">Smoothing component</td></tr><tr><td style="text-align:left;">BLACKBORDER</td><td style="text-align:center;">Blackborder detector</td><td style="text-align:center;">Yes</td><td style="text-align:left;">Black bar detection component</td></tr><tr><td style="text-align:left;">FORWARDER</td><td style="text-align:center;">JSON/Proto forwarder</td><td style="text-align:center;">Yes</td><td style="text-align:left;">JSON/Proto forwarder component</td></tr><tr><td style="text-align:left;">BOBLIGHTSERVER</td><td style="text-align:center;">Boblight server</td><td style="text-align:center;">Yes</td><td style="text-align:left;">Boblight server component</td></tr><tr><td style="text-align:left;">GRABBER</td><td style="text-align:center;">Screen capture</td><td style="text-align:center;">Yes</td><td style="text-align:left;">Screen Capture component</td></tr><tr><td style="text-align:left;">V4L</td><td style="text-align:center;">V4L capture device</td><td style="text-align:center;">Yes</td><td style="text-align:left;">USB capture device component</td></tr><tr><td style="text-align:left;">AUDIO</td><td style="text-align:center;">AUDIO capture device</td><td style="text-align:center;">Yes</td><td style="text-align:left;">Audio capture device component</td></tr><tr><td style="text-align:left;">LEDDEVICE</td><td style="text-align:center;">LED device</td><td style="text-align:center;">Yes</td><td style="text-align:left;">LED device component start/stops output of the configured LED device</td></tr><tr><td style="text-align:left;">ALL</td><td style="text-align:center;">SPECIAL: Hyperion</td><td style="text-align:center;">Yes</td><td style="text-align:left;">Enable or disable Hyperion. Recovers/saves last state of all other components</td></tr><tr><td style="text-align:left;">COLOR</td><td style="text-align:center;">Solid color</td><td style="text-align:center;">No</td><td style="text-align:left;">All colors that has been set belongs to this component</td></tr><tr><td style="text-align:left;">EFFECT</td><td style="text-align:center;">Effect</td><td style="text-align:center;">No</td><td style="text-align:left;">All effects belongs to this component</td></tr><tr><td style="text-align:left;">IMAGE</td><td style="text-align:center;">Solid Image</td><td style="text-align:center;">No</td><td style="text-align:left;">All single/solid images belongs to this. NOT for streaming</td></tr><tr><td style="text-align:left;">FLATBUFSERVER</td><td style="text-align:center;">Flatbuffers Server</td><td style="text-align:center;">No</td><td style="text-align:left;">All image stream sources from Flatbuffers server</td></tr><tr><td style="text-align:left;">PROTOSERVER</td><td style="text-align:center;">Protobuffer Server</td><td style="text-align:center;">No</td><td style="text-align:left;">All image stream sources from Protobuffer server</td></tr></tbody></table><h3 id="source-selection" tabindex="-1"><a class="header-anchor" href="#source-selection"><span>Source Selection</span></a></h3>',2),mn={href:"/json/serverinfo#priorities",target:"_blank",rel:"noopener noreferrer"},vn=a(`<div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token comment">// Example: Set priority 50 to visible</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;sourceselect&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;priority&quot;</span><span class="token operator">:</span><span class="token number">50</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),gn=n("code",null,"priorities_autoselect",-1),kn={href:"/json/serverinfo##priorities-selection-auto-manual",target:"_blank",rel:"noopener noreferrer"},yn=a(`<div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;sourceselect&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;auto&quot;</span><span class="token operator">:</span><span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After which, the <code>priorities_autoselect</code>-status will return to <code>true</code>.</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>You can only select priorities which are <code>active:true</code>!</p></div><h3 id="control-instances" tabindex="-1"><a class="header-anchor" href="#control-instances"><span>Control Instances</span></a></h3>`,4),bn={href:"/json/serverinfo#instance",target:"_blank",rel:"noopener noreferrer"},hn=a(`<div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token comment">// Command to start instance 1</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;instance&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;subcommand&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;startInstance&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;instance&quot;</span> <span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>

<span class="token comment">// Command to stop instance 1</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;instance&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;subcommand&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;stopInstance&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;instance&quot;</span> <span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="api-instance-handling" tabindex="-1"><a class="header-anchor" href="#api-instance-handling"><span>API Instance handling</span></a></h3>`,2),fn=n("code",null,"0",-1),qn={href:"/json/subscribe#instance-updates",target:"_blank",rel:"noopener noreferrer"},xn=a(`<p>It&#39;s possible to switch to another instance with the following command:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token comment">// Switch to instance 1</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;instance&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;subcommand&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;switchTo&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;instance&quot;</span> <span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This will return a success response or an error if the instance isn&#39;t available.</p>`,3),_n={class:"custom-container warning"},jn=n("p",{class:"custom-container-title"},"WARNING",-1),Sn=n("code",null,"0",-1),wn={href:"/json/subscribe#instance-updates",target:"_blank",rel:"noopener noreferrer"},En=a(`<h3 id="live-image-stream" tabindex="-1"><a class="header-anchor" href="#live-image-stream"><span>Live Image Stream</span></a></h3><p>You can request a live image stream (if the current source priority supports it, otherwise here may be no response).</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;ledcolors&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;subcommand&quot;</span><span class="token operator">:</span><span class="token string">&quot;imagestream-start&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You will receive &quot;ledcolors-imagestream-update&quot; messages with a base64 encoded image. Stop the stream by sending:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;ledcolors&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;subcommand&quot;</span><span class="token operator">:</span><span class="token string">&quot;imagestream-stop&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container danger"><p class="custom-container-title">HTTP/S</p><p>This feature is not available for HTTP/S JSON-RPC</p></div><h3 id="live-led-color-stream" tabindex="-1"><a class="header-anchor" href="#live-led-color-stream"><span>Live LED Color Stream</span></a></h3><p>You can request a live LED color stream with current color values in RGB for each single LED. The update rate is 125ms.</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;ledcolors&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;subcommand&quot;</span><span class="token operator">:</span><span class="token string">&quot;ledstream-start&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You will receive &quot;ledcolors-ledstream-update&quot; messages with an array of all LED colors. Stop the stream by sending:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span><span class="token operator">:</span><span class="token string">&quot;ledcolors&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;subcommand&quot;</span><span class="token operator">:</span><span class="token string">&quot;ledstream-stop&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container danger"><p class="custom-container-title">HTTP/S</p><p>This feature is not available for HTTP/S JSON-RPC</p></div><h3 id="control-hyperion" tabindex="-1"><a class="header-anchor" href="#control-hyperion"><span>Control Hyperion</span></a></h3><p>Control the Hyperion system as a whole with the following subcommands;</p><table><thead><tr><th style="text-align:left;">subcommand</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">suspend</td><td style="text-align:left;">Suspend all components and instances</td></tr><tr><td style="text-align:left;">resume</td><td style="text-align:left;">Resume from suspend</td></tr><tr><td style="text-align:left;">toggleSuspend</td><td style="text-align:left;">Toggle between suspend and resume</td></tr><tr><td style="text-align:left;">idle</td><td style="text-align:left;">Suspend, but keep LED on and run a background effect, if configured</td></tr><tr><td style="text-align:left;">toggleIdle</td><td style="text-align:left;">Toggle between idle and resume</td></tr><tr><td style="text-align:left;">restart</td><td style="text-align:left;">Restart Hyperion</td></tr></tbody></table><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token comment">// Command to suspend Hyperion</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;system&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;subcommand&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;suspend&quot;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Command to resume Hyperion from suspend</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;system&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;subcommand&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;resume&quot;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Command to toggle between suspend and resume</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;command&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;system&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;subcommand&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;toggleSuspend&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16);function In(An,Cn){const s=o("ExternalLinkIcon"),l=o("RouteLink");return p(),r("div",null,[u,n("table",null,[m,n("tbody",null,[v,g,n("tr",null,[k,y,b,n("td",h,[t("We recommend "),f,t(", following the "),n("a",q,[t("Priority Guidelines"),e(s)]),t(". Min "),x,t(" Max "),_])]),j])]),S,n("p",null,[t("Set an effect by name. Available names can be found in the "),e(l,{to:"/json/ServerInfo.html#effect-list"},{default:c(()=>[t("serverinfo effect list")]),_:1}),t(".")]),n("table",null,[w,n("tbody",null,[E,I,n("tr",null,[A,C,R,n("td",D,[t("We recommend "),B,t(", following the "),n("a",L,[t("Priority Guidelines"),e(s)]),t(". Min "),T,t(" Max "),N])]),G])]),M,n("p",null,[t("Set a single image. Supports all "),n("a",O,[t("Qt5"),e(s)]),t(" image formats, including png/jpg/gif.")]),n("table",null,[P,n("tbody",null,[n("tr",null,[H,Y,F,n("td",V,[t("Data of image as "),n("a",W,[t("Base64"),e(s)])])]),J,U,K,n("tr",null,[Q,Z,z,n("td",X,[t("We recommend "),$,t(", following the "),n("a",nn,[t("Priority Guidelines"),e(s)]),t(". Min "),tn,t(" Max "),en])]),sn])]),an,n("p",null,[t("Adjustments reflect the color calibration. You can modify all properties of "),n("a",on,[t("serverinfo adjustments"),e(s)]),t(".")]),ln,n("p",null,[t("Some components can be enabled and disabled at runtime. To get the current state and available components see "),n("a",pn,[t("Serverinfo Components"),e(s)]),t(". See also: "),rn]),cn,n("p",null,[t("Each component has a unique id. Not all of them can be enabled/disabled -- some of them, such as effect and color, are used to determine the source type when examining the "),n("a",dn,[t("priority list"),e(s)]),t(".")]),un,n("p",null,[t("Sources are always selected automatically by priority value (lowest value is the highest priority). You need to know the priority value of the source you want to select -- these priority values are available in the "),n("a",mn,[t("serverinfo Priorities"),e(s)]),t(".")]),vn,n("p",null,[t("If you get a success response, the "),gn,t("-status will switch to false (see "),n("a",kn,[t("serverinfo Autoselection Mode"),e(s)]),t("). You are now in manual mode, to switch back to auto mode send:")]),yn,n("p",null,[t("An instance represents an LED hardware instance. It runs within its own scope with it's own plugin settings, LED layout and calibration. Before selecting you can instance, you should first get information about the available instances from "),n("a",bn,[t("serverinfo"),e(s)]),t(".")]),hn,n("p",null,[t("On connection to the API you will be connected to instance "),fn,t(" by default. You can control only one instance at the same time within a single connection, and "),n("a",qn,[t("subscriptions"),e(s)]),t(" are in the context of the selected instance.")]),xn,n("div",_n,[jn,n("p",null,[t("It's possible that an instance will stop while you are connected to it. In this case connections on that instance will automatically be reset to instance "),Sn,t(". Keep watching the instance data via subscription if you need to handle this case. See: "),n("a",wn,[t("Instance updates"),e(s)]),t(".")])]),En])}const Dn=i(d,[["render",In],["__file","Control.html.vue"]]),Bn=JSON.parse('{"path":"/json/Control.html","title":"Control","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Sections","slug":"sections","link":"#sections","children":[{"level":3,"title":"Set Color","slug":"set-color","link":"#set-color","children":[]},{"level":3,"title":"Set Effect","slug":"set-effect","link":"#set-effect","children":[]},{"level":3,"title":"Set Image","slug":"set-image","link":"#set-image","children":[]},{"level":3,"title":"Clear","slug":"clear","link":"#clear","children":[]},{"level":3,"title":"Adjustments","slug":"adjustments","link":"#adjustments","children":[]},{"level":3,"title":"LED mapping","slug":"led-mapping","link":"#led-mapping","children":[]},{"level":3,"title":"Video Mode","slug":"video-mode","link":"#video-mode","children":[]},{"level":3,"title":"Control Components","slug":"control-components","link":"#control-components","children":[]},{"level":3,"title":"Components/IDs explained","slug":"components-ids-explained","link":"#components-ids-explained","children":[]},{"level":3,"title":"Source Selection","slug":"source-selection","link":"#source-selection","children":[]},{"level":3,"title":"Control Instances","slug":"control-instances","link":"#control-instances","children":[]},{"level":3,"title":"API Instance handling","slug":"api-instance-handling","link":"#api-instance-handling","children":[]},{"level":3,"title":"Live Image Stream","slug":"live-image-stream","link":"#live-image-stream","children":[]},{"level":3,"title":"Live LED Color Stream","slug":"live-led-color-stream","link":"#live-led-color-stream","children":[]},{"level":3,"title":"Control Hyperion","slug":"control-hyperion","link":"#control-hyperion","children":[]}]}],"git":{"updatedTime":1710682155000},"filePathRelative":"json/Control.md"}');export{Dn as comp,Bn as data};
