import{_ as r,b as a,c as d,d as c,e,g as t,f as l,w as s,h as o}from"./app-Db2qsd6l.js";const u={},h=o('<h1 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h1><p>Hyperion supports many different controllers and LED devices. Also network communication is possible, therefore we also support Philips Hue, WLED and more.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>In case your LED device is not working or shows as being disabled in the Dashboard or Remote Control, check Hyperion&#39;s log for errors first!</p><p>The error might already provide you a good indication what went wrong. The log can be found under the &quot;System&quot; menu entry or you follow the link at the device&#39;s configuration page.</p></div><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h2>',4),p={class:"custom-container tip"},f=e("p",{class:"custom-container-title"},"TIP",-1),m=e("p",null,"By default, not all configuration items are displayed to allow quick and easy setup.",-1),_={href:"/user/Configuration.html#settings-level",target:"_blank",rel:"noopener noreferrer"},g=o('<h3 id="general-settings" tabindex="-1"><a class="header-anchor" href="#general-settings"><span>General Settings</span></a></h3><p>General settings you will find at every LED device type.</p><h4 id="hardware-led-count" tabindex="-1"><a class="header-anchor" href="#hardware-led-count"><span>Hardware LED Count</span></a></h4><p>The number of physical LEDs the device allows to be addressed.</p><details class="custom-container details"><summary>In case the Hardware LED Count is disabled</summary><p>For some devices the input element is disabled as the number of LEDs is resolved automatically.</p><p>Failing to get a device&#39;s properties result in an error message provided to you. Check the configuration done or refresh the page.</p></details><h3 id="advanced-expert-settings" tabindex="-1"><a class="header-anchor" href="#advanced-expert-settings"><span>Advanced/Expert Settings</span></a></h3><h4 id="rgb-byte-order" tabindex="-1"><a class="header-anchor" href="#rgb-byte-order"><span>RGB Byte Order</span></a></h4><p>The RGB byte order is configurable per LED device type. If you want to check or modify this value, use the &quot;RGB Byte Order wizard&quot; (Magic Wand).</p><h4 id="autostart" tabindex="-1"><a class="header-anchor" href="#autostart"><span>Autostart</span></a></h4><p>An LED device is started when Hyperion is brought up per default. In case autostart is disabled, the device is to be switched on later manually or via API.</p><h4 id="connection-attempts" tabindex="-1"><a class="header-anchor" href="#connection-attempts"><span>Connection attempts</span></a></h4><p>Each LED device provides a retry to open capability. If the number of connection attempts is exceeded the LED device will get in error state.</p><h4 id="retry-interval" tabindex="-1"><a class="header-anchor" href="#retry-interval"><span>Retry interval</span></a></h4><p>The number of seconds to be passed until the next retry attempt for connection is done.</p><h3 id="specific-settings" tabindex="-1"><a class="header-anchor" href="#specific-settings"><span>Specific Settings</span></a></h3><p>Each LED device supports additional, device specific settings. Some settings are common across the different device categories.</p><h3 id="actions" tabindex="-1"><a class="header-anchor" href="#actions"><span>Actions</span></a></h3><h4 id="save-settings" tabindex="-1"><a class="header-anchor" href="#save-settings"><span>Save settings</span></a></h4>',18),v={href:"/user/advanced/Advanced.html#led-layout",target:"_blank",rel:"noopener noreferrer"},b=o('<h4 id="identify" tabindex="-1"><a class="header-anchor" href="#identify"><span>Identify</span></a></h4><p>For some LED device types you can test the technical settings before saving or let the LEDs of the device light up for identification.</p><p>The button &quot;Identify&quot; is only activated, if the current configuration is valid.</p><h2 id="controller-types" tabindex="-1"><a class="header-anchor" href="#controller-types"><span>Controller Types</span></a></h2><p>Hyperion supports multiple different LED devices which fall into four main categories:</p><h3 id="spi-pwm" tabindex="-1"><a class="header-anchor" href="#spi-pwm"><span>SPI/PWM</span></a></h3><p>Are 3 or 4 wire LEDs which can be powered via SPI (Serial Peripheral Interface) or PWM (Pulse Width Modulation) of a Raspberry Pi or an Arduino (which is USB connected to your computer/HTPC/Pi).</p>',7),y=e("h4",{id:"pwm-prerequisites-controller-type-rpi-pwm-ws281x",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#pwm-prerequisites-controller-type-rpi-pwm-ws281x"},[e("span",null,"PWM Prerequisites (Controller type RPi PWM/ws281x)")])],-1),w=e("code",null,"root",-1),k=e("br",null,null,-1),P={href:"/user/Installation.html#change-the-service-user-to-root",target:"_blank",rel:"noopener noreferrer"},x=e("h4",{id:"spi-prerequisites-controller-type-group-rpi-spi",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#spi-prerequisites-controller-type-group-rpi-spi"},[e("span",null,"SPI Prerequisites (Controller type group RPi SPI)")])],-1),E=e("p",null,"On most systems the SPI (Serial Peripheral Interface) is not enabled per default and requires to be activated.",-1),S={class:"custom-container details"},L=e("summary",null,"Activate SPI",-1),D=e("p",null,"For non RPi-devices, please check your device's documentation.",-1),I=e("p",null,"SPI activation for Raspberry Pi devices is dependend on the Operating System you run:",-1),C=e("ul",null,[e("li",null,[e("strong",null,"Raspberry Pi OS")])],-1),A=e("p",null,[e("code",null,"sudo raspi-config nonint do_spi 0")],-1),R=e("ul",null,[e("li",null,[e("strong",null,"LibreELEC")])],-1),T=e("code",null,"dtparam=spi=on",-1),B={href:"https://wiki.libreelec.tv/configuration/config_txt",target:"_blank",rel:"noopener noreferrer"},q=e("ul",null,[e("li",null,[e("strong",null,"CoreELEC / OSMC")])],-1),M=e("p",null,"You can activate SPI via the Hardware tab under Settings",-1),O=e("ul",null,[e("li",null,[e("strong",null,"Other")])],-1),H=e("p",null,"Please check the system documentation.",-1),W=e("p",null,"In case you run more than 250 LEDs you need to increase the SPI buffer size",-1),N={class:"custom-container details"},U=o("<summary>Increase SPI Buffer</summary><p>Add <code>spidev.bufsize=1024000</code> to the cmdline.txt.</p><p>Configuration on Raspberry Pi devices is dependend on the Operating System you run:</p><ul><li><strong>Raspberry Pi OS</strong></li></ul><p>Edit the cmdline.txt file in the boot partition located at <code>/boot/firmware/</code>.</p><p><strong>Note</strong>: Prior to the Bookworm version, it was located at <code>/boot/</code>.</p><ul><li><strong>LibreELEC</strong></li></ul>",7),F={href:"https://wiki.libreelec.tv/configuration/config_txt",target:"_blank",rel:"noopener noreferrer"},G=e("h3",{id:"usb-serial",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#usb-serial"},[e("span",null,"USB/Serial")])],-1),z=e("p",null,"Plug and play. The following controllers are supported.",-1),V=e("h3",{id:"network",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#network"},[e("span",null,"Network")])],-1),K=e("p",null,"Everything that is reachable over network.",-1),Y=e("h3",{id:"others",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#others"},[e("span",null,"Others")])],-1),J=e("p",null,"All other devices that do not fit into any categories.",-1);function X(j,Q){const n=a("ExternalLinkIcon"),i=a("RouteLink");return d(),c("div",null,[h,e("div",p,[f,m,e("p",null,[t("To display additional configuration items, change the "),e("a",_,[t("settings-level"),l(n)]),t(".")])]),g,e("p",null,[t("Allows to save the settings if the configuration is valid. In case you have not configured an "),e("a",v,[t("LED-Layout"),l(n)]),t(" yet, you have the option creating a default one and refine it later. If the LEDs configured by the layout exceed the number of the hardware LED count, check and refine the configuration or the layout.")]),b,e("ul",null,[e("li",null,[l(i,{to:"/user/leddevices/spi_pwm/apa102.html"},{default:s(()=>[t("APA102")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/spi_pwm/apa104.html"},{default:s(()=>[t("APA104")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/spi_pwm/lpd6803.html"},{default:s(()=>[t("LPD6803")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/spi_pwm/lpd8806.html"},{default:s(()=>[t("LPD8806")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/spi_pwm/p9813.html"},{default:s(()=>[t("P9813")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/spi_pwm/sk6812.html"},{default:s(()=>[t("SK6812")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/spi_pwm/sk9822.html"},{default:s(()=>[t("SK9822")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/spi_pwm/ws2801.html"},{default:s(()=>[t("WS2801")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/spi_pwm/ws2812b.html"},{default:s(()=>[t("WS2812B")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/spi_pwm/piblaster.html"},{default:s(()=>[t("pi-blaster")]),_:1})])]),y,e("p",null,[t("PWM (Pulse Width Modulation) requires that Hyperion run under the "),w,t(" user."),k,t(" In case you run Hyperion as a service: "),e("a",P,[t("Change the service user to 'root'"),l(n)])]),x,E,e("details",S,[L,D,I,C,A,R,e("p",null,[t("Add "),T,t("to config.txt per "),e("a",B,[t("LibreELEC Wiki instructions"),l(n)])]),q,M,O,H]),W,e("details",N,[U,e("p",null,[t("Edit the cmdline.txt file the same way as "),e("a",F,[t("config.txt"),l(n)])])]),G,z,e("ul",null,[e("li",null,[l(i,{to:"/user/leddevices/usb/adalight.html"},{default:s(()=>[t("Adalight")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/usb/atmo.html"},{default:s(()=>[t("Atmo")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/usb/dmx.html"},{default:s(()=>[t("DMX")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/usb/hyperion-usbasp.html"},{default:s(()=>[t("Hyperion-USBasp")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/usb/karate.html"},{default:s(()=>[t("Karate")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/usb/lightpack.html"},{default:s(()=>[t("Lightpack")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/usb/multilightpack.html"},{default:s(()=>[t("Multi-Lightpack")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/usb/paintpack.html"},{default:s(()=>[t("Paintpack")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/usb/rawhid.html"},{default:s(()=>[t("RawHID")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/usb/sedu.html"},{default:s(()=>[t("SEDU")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/usb/tpm2.html"},{default:s(()=>[t("TPM2")]),_:1})])]),V,K,e("ul",null,[e("li",null,[l(i,{to:"/user/leddevices/network/atmoorb.html"},{default:s(()=>[t("AtmoOrb")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/network/cololight.html"},{default:s(()=>[t("Cololight")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/network/fadecandy.html"},{default:s(()=>[t("FadeCandy")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/network/nanoleaf.html"},{default:s(()=>[t("Nanoleaf")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/network/philipshue.html"},{default:s(()=>[t("Philips Hue")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/network/razer.html"},{default:s(()=>[t("Razer Chroma")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/network/tinkerforge.html"},{default:s(()=>[t("Tinkerforge")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/network/tpm2net.html"},{default:s(()=>[t("TPM2.NET")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/network/udpartnet.html"},{default:s(()=>[t("UDP ArtNet")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/network/udpddp.html"},{default:s(()=>[t("UDP DDP")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/network/udpe131.html"},{default:s(()=>[t("UDP E1.31")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/network/udpraw.html"},{default:s(()=>[t("UDP Raw")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/network/wled.html"},{default:s(()=>[t("WLED")]),_:1})]),e("li",null,[l(i,{to:"/user/leddevices/network/yeelight.html"},{default:s(()=>[t("Yeelight")]),_:1})])]),Y,J,e("ul",null,[e("li",null,[l(i,{to:"/user/leddevices/others/debug.html"},{default:s(()=>[t("File")]),_:1})])])])}const $=r(u,[["render",X],["__file","index.html.vue"]]),ee=JSON.parse('{"path":"/user/leddevices/","title":"Overview","lang":"en-US","frontmatter":{"prev":false,"next":false,"sidebarDepth":0},"headers":[{"level":2,"title":"Configuration","slug":"configuration","link":"#configuration","children":[{"level":3,"title":"General Settings","slug":"general-settings","link":"#general-settings","children":[]},{"level":3,"title":"Advanced/Expert Settings","slug":"advanced-expert-settings","link":"#advanced-expert-settings","children":[]},{"level":3,"title":"Specific Settings","slug":"specific-settings","link":"#specific-settings","children":[]},{"level":3,"title":"Actions","slug":"actions","link":"#actions","children":[]}]},{"level":2,"title":"Controller Types","slug":"controller-types","link":"#controller-types","children":[{"level":3,"title":"SPI/PWM","slug":"spi-pwm","link":"#spi-pwm","children":[]},{"level":3,"title":"USB/Serial","slug":"usb-serial","link":"#usb-serial","children":[]},{"level":3,"title":"Network","slug":"network","link":"#network","children":[]},{"level":3,"title":"Others","slug":"others","link":"#others","children":[]}]}],"git":{"updatedTime":1710685240000},"filePathRelative":"user/leddevices/README.md"}');export{$ as comp,ee as data};
